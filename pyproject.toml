[project]
name = "ai_code_assistant"
version = "0.0.1"
description = "LongbowXXX's ai code assistant."
authors = [
    { name = "LongbowXXX" },
]
readme = "README.md"
license = { text = "MIT" }
keywords = [
    "llm",
]
classifiers = [
    "Programming Language :: Python :: 3.11",
]
requires-python = "==3.11.*"
dependencies = [
    "python-dotenv>=1.0.1",
    "langchain>=0.2.16",
    "langchain-community>=0.2.16",
    "langgraph>=0.2.16",
    "openai>=1.43.0",
    "chromadb>=0.5.3",
    "langchain-openai>=0.1.23",
    "langchain-google-genai>=1.0.10",
    "langchain-google-community>=1.0.8",
    "langchain-chroma>=0.1.3",
    "langchain-aws>=0.1.17",
    "langchainhub>=0.1.21",
    "types-requests>=2.32.0.20240905",
    "mesop>=0.12.3",
    "GitPython>=3.1.43",
    "pydantic>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "black>=24.8.0",
    "flake8>=7.1.1",
    "flake8-copyright>=0.2.4",
    "mypy>=1.11.2",
    "pytest>=8.3.2",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-html>=4.1.1",
    "respx>=0.21.1",
]

[tool.pytest.ini_options]
pythonpath = ["."]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"
generate_report_on_test = true

[tool.coverage.run]
branch = true
omit = ["tests/*"]

[tool.mypy]
plugins = []
ignore_missing_imports = true
strict = true
follow_imports = "normal"
strict_optional = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["mesop.*", "ai_code_assistant.gui.view.*"]
ignore_missing_imports = true
disallow_any_unimported = false

[tool.black]
target-version = ["py310"]
line-length = 120

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["agent", "agent.*"]
